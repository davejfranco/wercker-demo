build:
  box: google/golang
  steps:
    # Test the project
    - script:
        name: Unit tests
        code: go test ./...     
        
    - internal/docker-build: 
        dockerfile: Dockerfile 
        image-name: golang-demo-app # name used to refer to this image until it's pushed  

    - internal/docker-run:
        image: golang-demo-app
        name: myTestContainer     
    
    - script: 
        name: Test the container
        code: |
            if curlOutput=`curl -s myTestContainer:5000`; then 
                if [ "$curlOutput" == "Hello World!!" ]; then
                    echo "Test passed: container gave expected response"
                else
                    echo "Test failed: container gave unexpected response: " $curlOutput
                    exit 1
                fi   
            else 
                echo "Test failed: container did not respond"
                exit 1
            fi        

    - internal/docker-kill:
        name: myTestContainer               

    - internal/docker-push: 
        image-name: golang-demo-app
        username: $OCITENANT/$OCIUSER 
        password: $OCITOKEN
        registry: https://iad.ocir.io/v2/
        repository: iad.ocir.io/$OCITENANT/wercker-demo
        tag: latest, ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}

deploy:  
  
  box:
    id: golang

  steps:

    - kubectl:
        server: $KUBESERVER
        insecure-skip-tls-verify: true
        token: $KUBETOKEN
        command: set image deployment/api-deploy api=iad.ocir.io/$OCITENANT/api:${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}
